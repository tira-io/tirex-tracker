cff-version: 1.2.0
type: software
title: TIREx Tracker
repository-code: 'https://github.com/tira-io/tirex-tracker'

preferred-citation:
  type: conference-paper
  title: "TIREx Tracker: The Information Retrieval Experiment Tracker"
  collection-title: 48th International ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR 2025)
  location: Padua, Italy
  year: 2025
  month: 7
  publisher:
    name: ACM
  doi: 10.1145/3726302.3730297
  url: https://doi.org/10.1145/3726302.3730297
  authors:
    - given-names: Tim
      family-names: Hagen
      affiliation: University of Kassel and hessian.AI
      orcid: 'https://orcid.org/0009-0000-4854-7249'
    - given-names: Maik
      family-names: Fröbe
      affiliation: Friedrich-Schiller-Universität Jena
      orcid: 'https://orcid.org/0000-0002-1003-981X'
    - given-names: Jan Heinrich
      family-names: Merker
      affiliation: Friedrich-Schiller-Universität Jena
      orcid: https://orcid.org/0000-0003-1992-8696
    - given-names: Harrisen
      family-names: Scells
      affiliation: University of Kassel and hessian.AI
      orcid: https://orcid.org/0000-0001-9578-7157
    - given-names: Matthias
      family-names: Hagen
      affiliation: Friedrich-Schiller-Universität Jena
      orcid: https://orcid.org/0000-0002-9733-2890
    - given-names: Martin
      family-names: Potthast
      affiliation: 'University of Kassel, hessian.AI, and ScaDS.AI'
      orcid: https://orcid.org/0000-0003-2451-0665
  abstract: >-
    The reproducibility and transparency of retrieval experiments heavily depends on properly provided information on the
    experimental setup and conditions. But as manually curating such experiment metadata can be tedious, error-prone, and
    inconsistent, metadata should be systematically collected in an automatic way—similar to the collection of Python and
    git-specific settings in the ir_metadata reference implementation. To enable a platform-independent automatic metadata
    collection following the ir_metadata specification, we introduce the TIREx tracker: a tool realized via a lightweight
    C binary, pre-compiled with all dependencies for all major platforms to track hardware configurations, usage of
    power/CPUs/RAM/GPUs, and experiment/system versions. The TIREx tracker seamlessly integrates into Python, Java, or
    C/C++ workflows and can be easily incorporated in run submissions of shared tasks, which we showcase for the
    TIRA/TIREx platform. Code, binaries, and documentation are publicly available at
    https://github.com/tira-io/tirex-tracker.
