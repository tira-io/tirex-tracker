[project]
name = "tirex-tracker"
authors = [
    { name = "Maik FrÃ¶be", email = "maik.froebe@uni-jena.de" },
    { name = "Jan Heinrich Merker", email = "heinrich.merker@uni-jena.de" },
    { name = "Tim Hagen", email = "tim.hagen@uni-kassel.de" },
]
description = "Automatic resource and metadata tracking for information retrieval experiments."
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "typing-extensions~=4.0",
    "importlib-metadata~=8.0",
    "importlib-resources~=6.0",
    "ipython",
    "pyyaml~=6.0",
    "gitpython~=3.1",
]
dynamic = ["version"]

[project.optional-dependencies]
tests = [
    "bandit[toml]~=1.7",
    "mypy~=1.5",
    "pandas-stubs~=2.0",
    "pytest~=8.0",
    "pytest-cov>=5.0,<7.0",
    "runnb~=1.0",
    "ruff>=0.9,<0.12",
    "types-pyyaml~=6.0",
    "jupyter~=1.1",
]
docs = [
    "sphinx~=8.1",
    "myst-parser>=4,<4",
]
examples = [
    "pandas~=2.0",
    "python-terrier~=0.13.0; python_version<=\"3.12\"",
    "pyterrier-anserini~=0.1.3; python_version>=\"3.10\"",
    "pyterrier-pisa~=0.3.0; python_version<=\"3.10\"; platform_system != \"Darwin\"",
    "seaborn~=0.13.2",
]

[project.urls]
"Homepage" = "https://github.com/tira-io/tirex-tracker"
"Bug Tracker" = "https://github.com/tira-io/tirex-tracker/issues"

[build-system]
requires = ["setuptools>=75,<81", "setuptools-scm~=8.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
exclude = ["build", "venv"]

[tool.setuptools.package-data]
"*" = [
    "*.so",
    "*.dll",
    "*.dylib",
]

[tool.setuptools_scm]
root = "../"

[tool.ruff]
exclude = ["build", "venv", "resources"]

[tool.mypy]
exclude = ["build", "venv", "resources"]

[tool.bandit]
exclude_dirs = ["build", "venv", "resources"]

[tool.bandit.assert_used]
skips = ["**/test_*.py"]

[tool.pytest.ini_options]
log_cli = true
